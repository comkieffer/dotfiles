
# Source ROS if it hasn't been sourced yet
if [[ ! ${ROS_PACKAGE_PATH} ]]; then
    ros_start
fi


# Locate the most recent CLion install
CLION_DIR="${HOME}/.local/share/JetBrains/Toolbox/apps/CLion/ch-0/"
if [[ -d ${CLION_DIR} ]]; then 
    # This invocation deserves some explaining: 
    # CLion versions isntalled by the Jetbrains Toolbox are stored in CLION_DIR
    # We want to always run the latests one. Since the versions have 
    # monotonically increasing numbers we can just sort in decreasing order 
    # using the '-r' flag. We then want to grab only the first line using the 
    # cut command. Finally we append the path to the actual launch script.

    CLION_VERSION=$(ls ${CLION_DIR} | sort -r | cut -d $'\n' -f 1)
    CLION_CMD=${CLION_DIR}/${CLION_VERSION}/bin/clion.sh
else 
    # CLion wasn't installed throught the toolbox. Try the shortcut
    CLION_CMD="clion"
fi

# No args, treat cwd as project directory
if [[ ! $1 ]]; then 
    # If there is no CMakeLists file in the directory we're probably making a mistake
    if [[ ! -f CMakeLists.txt ]]; then
        printf "No CMakeLists.txt file found in this directory. Do you really want to open CLion? [y/N]: "
        if ! read -q; then
            return 1
        fi
    fi

    echo "Opening CLion here ..."
    ${CLION_CMD} . > /dev/null 2>&1 &!
    return 0
fi

# Arg #1 is project dir
if [[ -d $1 ]]; then 
    echo "Opening CLion in $1 ... "
    ${CLION_CMD} $1 > /dev/null 2>&1 &!
    return 0
else 
     "\e[1;31mError\[0m: $1 is not a directory"
    return 1
fi
