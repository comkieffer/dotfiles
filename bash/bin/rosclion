#!/bin/bash 
#
# Launch CLion. This script is useful because when launcher from a shell CLion picks up the 
# environment of the shell. This makes it possible to use custom ROS enviroment without creating a 
# launcher for each one.
#
# The script will also attempt to source a ros environment if ROS hasn't been loaded yet.

rossrc

# Locate the most recent CLion install
if [[ $(type -t clion) ]]; then 
    # Clion is launchable as a command
    CLION_CMD="clion"

elif [[ -d ${CLION_DIR} ]]; then 
    # This invocation deserves some explaining: 
    # CLion versions isntalled by the Jetbrains Toolbox are stored in CLION_DIR
    # We want to always run the latests one. Since the versions have 
    # monotonically increasing numbers we can just sort in decreasing order 
    # using the '-r' flag. We then want to grab only the first line using the 
    # cut command. Finally we append the path to the actual launch script.

    CLION_DIR="${HOME}/.local/share/JetBrains/Toolbox/apps/CLion/ch-0/"
    CLION_VERSION=$(ls ${CLION_DIR} | sort -r | cut -d $'\n' -f 1)
    CLION_CMD=${CLION_DIR}/${CLION_VERSION}/bin/clion.sh

    unset  CLION_DIR CLION_VERSION
else 
    echo "CLion not found" 
    exit 1
fi

# No args, treat cwd as project directory
if [[ ! "$1" ]]; then 
    # If there is no CMakeLists file in the directory we're probably making a mistake
    if [[ ! -f CMakeLists.txt ]]; then
        printf "No CMakeLists.txt file found in this directory. Do you really want to open CLion? [y/N]: "
        if ! read -q; then
            exit 1
        fi
    fi

    echo "Opening CLion here ..."
    ${CLION_CMD} . > /dev/null 2>&1 &!
    exit 0
fi

# Arg #1 is project dir
if [[ -d $1 ]]; then 
    # If there is no CMakeLists file in the directory we're probably making a mistake
    if [[ ! -f "$1/CMakeLists.txt" ]]; then
        printf "No CMakeLists.txt file found in $1. Do you really want to open CLion? [y/N]: "
        if ! read -q; then
            exit 1
        fi
    fi

    echo "Opening CLion in $1 ... "
    ${CLION_CMD} "$1" > /dev/null 2>&1 &!
    exit 0
else 
    echo -e"\e[1;31mError\[0m: $1 is not a directory"
    exit 1
fi

unset CLION_CMD
