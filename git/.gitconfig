[user]
	email = thibaud.chupin@gmail.com
	name = Thibaud Chupin

# Override email for "work" projects
[includeIf "gitdir:~/Projects-Work/"]
path = ~/.config/git/config-work

[core]
	fileMode = false
	editor = vim
    autocrlf = input

[alias]
    # list the recent commits in a oneline, coloured form with the date
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative

    # list recent commits and the files they touched
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # Find a file path within the directory
    find = "!git ls-files | grep -i"

    # Quick look at history with branches and stuff
    lsd = log --graph --boundary '--format=%C(yellow)%h%Creset%C(bold cyan)%d%Creset %s %C(dim normal)(%ar)%Creset' --all

    # List git branches sorted by last modified and ashow useful metadata
    # Example:
    #   master      Merge branch so-and-so          (3 weeks ago)  <Thibaud Chupin>
    #   my-feature  Implement feature this-and-that (3 weeks ago)  <Thibaud Chupin>
    brt = "!git for-each-ref refs/heads --color=always --sort -committerdate --format='%(HEAD)%(color:reset);%(color:yellow)%(refname:short)%(color:reset);%(contents:subject);%(color:green)(%(committerdate:relative))%(color:blue);<%(authorname)>' | column -t -s ';'"

    # Pick the parent commit for an interactive rebase.
    frbi = "!f() { git rebase --autosquash -i $(git log --pretty=oneline --color=always | fzf --ansi | cut -d ' ' -f1)^ ; }; f"

    # Checkout a merge request from the command line
    mr = !sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -

    # Short commands
    cp = cherry-pick
    st = status -s
    ci = commit
    co = checkout
    cob = checkout -b
    br = branch

[diff]
	wsErrorHighlight = all # Show whitesoace changes in diffs
	tool = meld

[push]
	default = simple

[merge]
	tool = meld
